generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Trip {
  id     String @id
  userId String

  name      String
  startDate DateTime
  endDate   DateTime
  days      Int
  position  Int
  events    Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Event {
  id     String @id
  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  name        String
  date        DateTime
  position    Int
  address     String?
  cost        Float?
  phoneNumber String?
  website     String?
  note        String?
  photo       String?
  photoAlbum  Json?

  type    EventType @default(DEFAULT)
  place   Place?    @relation(fields: [placeId], references: [placeId])
  placeId String?

  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tripId])
  @@index([placeId])
}

model Place {
  placeId String      @id
  events  Event[]
  types   PlaceType[]

  name                     String?
  address                  String?
  addressComponents        Json?
  photoReference           String?
  photos                   Json?
  url                      String?
  website                  String?
  phoneNumber              String?
  internationalPhoneNumber String?
  rating                   Float?
  userRatingsTotal         Int?
  priceLevel               Int?

  businessStatus        String?
  currentOpeningHours   Json?
  openingHours          Json?
  secondaryOpeningHours Json?
  editorialSummary      Json?
  reviews               Json?

  vicinity  String?
  geometry  Json?
  utcOffset Float?

  curbsidePickup               Boolean?
  delivery                     Boolean?
  dineIn                       Boolean?
  reservable                   Boolean?
  servesBeer                   Boolean?
  servesBreakfast              Boolean?
  servesBrunch                 Boolean?
  servesDinner                 Boolean?
  servesLunch                  Boolean?
  servesVegetarianFood         Boolean?
  servesWine                   Boolean?
  takeout                      Boolean?
  wheelchairAccessibleEntrance Boolean?
}

model PlaceType {
  name   String  @id
  places Place[]
}

enum EventType {
  DEFAULT
  FOOD
  TRANSPORT
  ACCOMMODATION
}
