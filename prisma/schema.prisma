generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// model User {
// trips    Trip[]
// role     Role   @default(USER)
// }

model Trip {
  id      String @id @default(uuid())
  ownerId String

  name      String
  startDate DateTime
  endDate   DateTime
  days      Int
  position  Int
  events    Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

model Event {
  id     String @id @default(uuid())
  trip   Trip   @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId String

  name        String
  date        DateTime
  position    Int
  address     String?
  cost        Float?
  phoneNumber String?
  website     String?
  type        EventType?

  googlePlace   GooglePlace? @relation(fields: [googlePlaceId], references: [placeId])
  googlePlaceId String?

  @@index([tripId])
  @@index([googlePlaceId])
}

model GooglePlace {
  placeId             String            @id
  photoReference      String?           @unique
  url                 String?           @unique
  type                String?
  types               GooglePlaceType[]
  geometry            Json?
  currentOpeningHours Json?

  priceLevel Int?
  rating     Float?
  utcOffset  Float?
  vicinity   String?

  curbsidePickup               Boolean?
  delivery                     Boolean?
  dineIn                       Boolean?
  reservable                   Boolean?
  servesBeer                   Boolean?
  servesBreakfast              Boolean?
  servesBrunch                 Boolean?
  servesDinner                 Boolean?
  servesLunch                  Boolean?
  servesVegetarianFood         Boolean?
  servesWine                   Boolean?
  takeout                      Boolean?
  wheelchairAccessibleEntrance Boolean?

  events Event[]
}

model GooglePlaceType {
  typeName String        @id
  places   GooglePlace[]
}

// Enums
enum Role {
  ADMIN
  TESTER
  PREMIUM
  USER
}

enum EventType {
  DEFAULT
  FOOD
  ACCOMODATION
  TRANSPORT
}
